export class Database{constructor(t,e){this.schema=e,this._caches={},this._fullyLoaded={},this._dbp=new Promise((r,i)=>{let s=indexedDB.open(t,e.getVersion());s.onerror=(()=>i(s.error)),s.onsuccess=(()=>{e.createFunctions(this),r(s.result)}),s.onupgradeneeded=(t=>{e.upgrade(s.result,t.oldVersion)})})}ready(){return this._dbp}dump(){let t={},e=[];return this._dbp.then(r=>{let i=r.objectStoreNames,s=r.objectStoreNames.length;for(let r=0;r<s;r++){let s=i[r];e.push(this.getAll(s).then(e=>t[s]=e))}return Promise.all(e).then(e=>t)})}_cacheOf(t){return this._caches.hasOwnProperty(t)||(this._caches[t]={}),this._caches[t]}_wrap(t,e,r,...i){return this._dbp.then(s=>new Promise((n,a)=>{let h=s.transaction(t,r),o=h.objectStore(t)[e](...i);h.oncomplete=(()=>n(o.result)),h.onabort=h.onerror=(()=>a(h.error))}))}put(t,e){return this._wrap(t,"put","readwrite",e).then(r=>(e.id=r,this._cacheOf(t)[r]=e,e))}del(t,e){return this._wrap(t,"delete","readwrite",e.id).then(r=>{delete this._cacheOf(t)[e.id]})}get(t,e){let r=this._cacheOf(t)[e];return void 0==r?this._wrap(t,"get",void 0,e).then(r=>(this._cacheOf(t)[e]=r,r)):Promise.resolve(r)}getAll(t){return this._fullyLoaded[t]?Promise.resolve(Object.values(this._cacheOf(t))):this._wrap(t,"getAll").then(e=>{let r=this._cacheOf(t);return this._fullyLoaded[t]=!0,e.map(t=>r[t.id]=t),e})}_criteriaMatch(t,e){for(let r in e)if(t[r]!==e[r])return!1;return!0}_fetchOne(t,e){return this._dbp.then(r=>new Promise((i,s)=>{let n=[],a=r.transaction(t).objectStore(t).openCursor();a.onerror=(t=>c.log(t)),a.onsuccess=(t=>{var r=t.target.result;if(r){let t=r.value;this._criteriaMatch(t,e)?n.push(t):r.continue()}else i(n)})}))}filter(t,e){return this._dbp.then(r=>new Promise((i,s)=>{let n=[],a=r.transaction(t).objectStore(t).openCursor();a.onerror=(t=>c.log(t)),a.onsuccess=(t=>{var r=t.target.result;if(r){let t=r.value;this._criteriaMatch(t,e)&&n.push(t),r.continue()}else i(n)})}))}getParent(t,e,r){let i=r[this.schema.getFkName(e)];return void 0==i?Promise.resolve(void 0):this.get(e,i)}getLinked(t,e,r){}getChildren(t,e,r){return this._dbp.then(i=>new Promise((s,n)=>{let a=i.transaction(e),h=a.objectStore(e).index(t).get(r.id);a.oncomplete=(()=>s(h.result)),a.onabort=a.onerror=(()=>n(a.error))}))}setParent(t,e,r,i){return r[this.schema.getFkName(e)]=i.id,this.put(t,r)}link(t,e,r,i){let s=this.schema.getLinkStoreName(t,e),n={};return n[this.schema.getFkName(t)]=r.id,n[this.schema.getFkName(e)]=i.id,this.put(s,n)}};export class Schema{constructor(t={keyPath:"id",autoIncrement:!0}){this.defaultConf=t,this._versions=[]}addVersion(t){this._versions.push(t)}getVersion(){return this._versions.length+1}upgrade(t,e){let r=new SchemaUpgrader(this,t,this.defaultConf);this._versions.forEach((t,i)=>{i>=e&&t(r,!0)})}createFunctions(t){let e=new SchemaFunctionBuilder(this,t);this._versions.forEach((t,r)=>{t(e,!1)})}getFkName(t){return`__${t}Id`}getLinkStoreName(t,e){return`m2m__${t}__${e}`}};class SchemaFunctionBuilder{constructor(t,e){this.schema=t,this.target=e}capitalize(t){return t.charAt(0).toUpperCase()+t.slice(1)}addStore(t){let e=this.capitalize(t),r=e+"s";this.target["put"+e]=function(e){return this.put(t,e)},this.target["del"+e]=function(e){return this.del(t,e)},this.target["get"+e]=function(e){return this.get(t,e)},this.target["getAll"+r]=function(e){return this.getAll(t,e)}}oneToMany(t,e){let r=this.capitalize(t),i=this.capitalize(e),s=i+"s";this.target["get"+i+r]=function(r){return this.getParent(e,t,r)},this.target["get"+r+s]=function(r){return this.getChildren(t,e,r)},this.target["set"+i+r]=function(r,i){return this.setParent(e,t,r,i)}}manyToMany(t,e){let r=this.schema.getLinkStoreName(t,e),i=this.capitalize(t),s=this.capitalize(e),n=i+"s",a=s+"s";this.target["get"+i+a]=function(t){return this.getChildren(e,r,t)},this.target["get"+s+n]=function(t){},this.target["link"+i+"to"+s]=function(r,i){db.link(t,e,r,i)},this.target["link"+s+"to"+i]=function(r,i){db.link(t,e,i,r)},this.target["unlink"+i+"From"+s]=function(r,i){db.link(t,e,r,i)},this.target["unlink"+s+"From"+i]=function(r,i){db.link(t,e,i,r)}}}class SchemaUpgrader{constructor(t,e,r){this.schema=t,this.idb=e,this.stores={},this.defaultConf=r}addStore(t,e=this.defaultConf){let r=this.idb.createObjectStore(t,e);return this.stores[t]=r,r}oneToMany(t,e){this.stores[e].createIndex(t,this.schema.getFkName(t))}manyToMany(t,e){let r=this.idb.createObjectStore(this.schema.getLinkStoreName(t,e),this.defaultConf);r.createIndex(t,this.schema.getFkName(t)),r.createIndex(e,this.schema.getFkName(e))}}export function deleteIdb(t){indexedDB.deleteDatabase(t)};